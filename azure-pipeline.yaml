pool:
  vmImage: ubuntu-latest

parameters:
  - name: AppStage
    displayName: App Stagee
    type: string
    default: development
    values:
      - development
      - test
      - stage
      - ozprod
      - inprod
      - usprod

  - name: cluster
    displayName: aks cluster
    type: string
    default: ind-aks
    values:
      - ind-aks
      - aust-aks
      - usa-aks

steps:

  - task: Bash@3
    displayName: "Setting up environment"
    inputs:
      targetType: "inline"
      script: "bash ./mychart/script.sh ${{ parameters.reactAppStage }}"

  - task: Docker@0
    displayName: "BuildAnServerImage"
    inputs:
      containerregistrytype: "Container Registry"
      dockerRegistryConnection: "acr"
      dockerFile: "./packages/server/Dockerfile"
      imageName: "server:$(Build.BuildId)"

  - task: Docker@0
    displayName: "BuildAnClientImage"
    inputs:
      containerregistrytype: "Container Registry"
      dockerRegistryConnection: "acr"
      dockerFile: "./packages/web-client/Dockerfile"
      imageName: "client:$(Build.BuildId)"

  - task: Docker@0
    displayName: "PushAnServerImage"
    inputs:
      containerregistrytype: "Container Registry"
      dockerRegistryConnection: "acr"
      action: "Push an image"
      imageName: "server:$(Build.BuildId)"

  - task: Docker@0
    displayName: "PushAnClientImage"
    inputs:
      containerregistrytype: "Container Registry"
      dockerRegistryConnection: "acr"
      action: "Push an image"
      imageName: "client:$(Build.BuildId)"

  - task: replacetokens@5
    displayName: "replaceImageTag"
    inputs:
      rootDirectory: "./chart"
      targetFiles: "**/values.yaml"
      encoding: "auto"
      tokenPattern: "azpipelines"
      writeBOM: true
      actionOnMissing: "warn"
      keepToken: false
      actionOnNoFiles: "continue"
      enableTransforms: false
      enableRecursion: false
      useLegacyPattern: false
      enableTelemetry: true

  - task: HelmDeploy@0
    displayName: "HelmDeploy"
    inputs:
      connectionType: "Kubernetes Service Connection"
      kubernetesServiceConnection: "${{ parameters.cluster }}"
      releaseName: "my-app"
      command: "upgrade"
      chartType: "FilePath"
      chartPath: "./-chart"
      valueFile: "./-chart/values.yaml"
